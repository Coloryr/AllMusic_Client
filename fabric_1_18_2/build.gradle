plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "8.1.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven { url 'https://jitpack.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	implementation "org.apache.httpcomponents.client5:httpclient5:5.2.1"
	implementation "org.gagravarr:vorbis-java-core:0.8"
	implementation "com.github.jcodec:jcodec:master-SNAPSHOT"
	implementation "ws.schild:jave-core:3.3.1"
	implementation "ws.schild:jave-nativebin-win64:3.3.1"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

shadowJar {
	exclude "META-INF/*"

	dependencies {
		include(dependency("org.apache.httpcomponents.core5:httpcore5"))
		include(dependency("org.apache.httpcomponents.core5:httpcore5-h2"))
		include(dependency("org.apache.httpcomponents.client5:httpclient5"))
		include(dependency("org.gagravarr:vorbis-java-core"))
		include(dependency("org.jcodec:jcodec"))
		include(dependency("ws.schild:jave-core"))
		include(dependency("ws.schild:jave-nativebin-win64"))
	}
}

remapJar {
	inputFile = shadowJar.archiveFile
}
